/*Import dataset with formatted columns*/
data auto;
    infile '/home/carollr0/DataSets/Automobile_data.csv' dlm=',' firstobs=2;
    input symboling normalizedlosses 
        make $  fueltype $  aspiration $ numofdoors $   
    bodystyle $ drivewheels  $  enginelocation $ wheelbase length width 
        height curbweight enginetype $ numofcylinders $ enginesize fuelsystem $ bore 
        stroke compressionratio horsepower peakrpm citympg highwaympg price;
run;

proc print data=auto;
run;


/*Remove Normalized Losses feature - too many missing data points, not reliable*/
data auto2;
    set auto;
    keep symboling make fueltype aspiration  numofdoors    
    bodystyle  drivewheels    enginelocation  wheelbase length width 
        height curbweight enginetype  numofcylinders  enginesize fuelsystem  bore 
        stroke compressionratio horsepower peakrpm citympg highwaympg price; 
run;

proc print data=auto2;
run;

/*Descriptive Stats on Orignal Data - numerical features*/
ods noproctitle;
ods graphics / imagemap=on;

proc means data=auto2 chartype mean std min max n nmiss vardef=df;
    var symboling wheelbase length width height curbweight enginesize bore stroke 
        compressionratio horsepower peakrpm citympg highwaympg;
run;

/*Plot all numeric variables against each other
*/
options validvarname=any;
ods noproctitle;
ods graphics / imagemap=on;

/* Scatter plot matrix macro */
%macro scatterPlotMatrix(xVars=, title=, groupVar=);
    proc sgscatter data=auto2;
        matrix &xVars / %if(&groupVar ne %str()) %then
            %do;
                group=&groupVar legend=(sortorder=ascending) %end;
        diagonal=(histogram normal);
        title &title;
    run;

    title;
%mend scatterPlotMatrix;

%scatterPlotMatrix(xVars=symboling wheelbase length width height curbweight 
    enginesize bore stroke compressionratio horsepower peakrpm citympg highwaympg 
    price, title="Original Dataset - Scatter plot matrix", groupVar=);

proc corr data=auto2 plots=matrix (histogram);
run;

/*Delete all rows with missing data - 199 records left*/
data auto_clean;
    set auto2;
    if nmiss(of _numeric_, 1) + cmiss(of _character_, '?') then delete;
run;

proc print data=auto_clean;
run;

/*Descriptive Stats on Clean Data */
ods noproctitle;
ods graphics / imagemap=on;

proc means data=AUTO_CLEAN n nmiss chartype mean std min max vardef=df;
    var symboling wheelbase length width height curbweight enginesize bore stroke 
        compressionratio horsepower peakrpm citympg highwaympg;
run;

/*Plot all numeric variables against each other*/
options validvarname=any;
ods noproctitle;
ods graphics / imagemap=on;

/* Scatter plot matrix macro */
%macro scatterPlotMatrix(xVars=, title=, groupVar=);
    proc sgscatter data=WORK.AUTO_Clean;
        matrix &xVars / %if(&groupVar ne %str()) %then
            %do;
                group=&groupVar legend=(sortorder=ascending) %end;
        diagonal=(histogram normal);
        title &title;
    run;

    title;
%mend scatterPlotMatrix;

%scatterPlotMatrix(xVars=symboling wheelbase length width height curbweight 
    enginesize bore stroke compressionratio horsepower peakrpm citympg highwaympg 
    price, title="Clean Dataset - Scatter plot matrix", groupVar=);

proc corr data=auto_clean plots=matrix (histogram);
run;

/*Descriptive Stats on Deleted Data*/
/*Plot all numeric variables against each other*/
/*Data set created - Deleted rows with missing data*/
data auto_clean_missing;
    set auto2;
    if nmiss(of _numeric_, 1) + cmiss(of _character_, '?') then
        output;
run;

proc print data=auto_clean_missing;
run;

/*Descriptive Statistics for Numeric Variables*/
ods noproctitle;
ods graphics / imagemap=on;

proc means data=auto_clean_missing chartype n nmiss mean std min max vardef=df;
    var symboling wheelbase length width height curbweight enginesize bore stroke 
        compressionratio horsepower peakrpm citympg highwaympg;
run;

options validvarname=any;
ods noproctitle;
ods graphics / imagemap=on;

/* Scatter plot matrix macro */
%macro scatterPlotMatrix(xVars=, title=, groupVar=);
    proc sgscatter data=WORK.auto_clean_missing;
        matrix &xVars / %if(&groupVar ne %str()) %then
            %do;
                group=&groupVar legend=(sortorder=ascending) %end;
        diagonal=(histogram normal);
        title &title;
    run;

    title;
%mend scatterPlotMatrix;

%scatterPlotMatrix(xVars=symboling wheelbase length width height curbweight 
    enginesize bore stroke compressionratio horsepower peakrpm citympg highwaympg 
    price, title="Deleted Records - Scatter plot matrix", groupVar=);

proc corr data=auto_clean_missing plots=matrix (histogram);
run;

/*Dealing with Many Explanatory Variables
#Check residuals to be normally distributed but not individual variables in matrix,
#Fix any outliers - use proc univariate to point out outliers "Extreme Observations"
*/
Proc univariate data=auto_clean;
    class make /*fueltype aspiration numofdoors bodystyle drivewheels enginelocation 
        enginetype */ numofcylinders /*fuelsystem*/;
    var symboling /*wheelbase*/
    length width height  /*curbweight*/
    enginesize bore stroke compressionratio horsepower peakrpm 
        citympg /*highwaympg*/;
    histogram;
run;

proc print data=work.auto_clean; run;

Proc reg data=work.auto_clean plots(label)=(rstudentbyleverage cooksd);
    Model price = symboling length width height enginesize bore stroke compressionratio horsepower peakrpm citympg /VIF;
    run;
quit;

/*Observations 47 is shown to be leverage and outliers. This observations will be removed.*/
data auto_remobs;
set work.auto_clean;
if _N_=47  then delete;
run;
quit;
proc print data=auto_remobs; run;

/*Re-Run residuals and add Correlation*/
Proc reg data=work.auto_remobs corr plots(label)=(rstudentbyleverage cooksd);
    Model price = symboling length width height enginesize bore stroke compressionratio horsepower peakrpm citympg  /VIF;
    run;
quit;


/*Variable Selection techinques - LARS*/
Proc glmselect data=work.auto_remobs plots(stepaxis=number)=(criterionpanel ASEPlot) seed=1;
        Model price = symboling wheelbase length width height curbweight enginesize bore 
        stroke compressionratio horsepower peakrpm citympg highwaympg  / 
        selection=LAR (choose=cv stop=cv) CVDETAILS;
Run;
quit;

/*Variable Selection techinques - LASSO*/
proc glmselect data=work.auto_remobs plots(stepaxis=number)=(criterionpanel ASEPlot) seed=1;
    partition fraction(test=.5);
    Model price=symboling wheelbase length width height curbweight enginesize bore 
        stroke compressionratio horsepower peakrpm citympg highwaympg / 
        selection=lasso(choose=cv stop=cv) CVDETAILS;
run;




/*Run Selected Model (LASSO)*/
Proc reg data=work.auto_remobs;
    Model price= width curbweight enginesize horsepower /partial;
    run;
quit;



/*Final model selected*/
Proc reg data=work.auto_remobs;
    Model price= width  enginesize horsepower /p cli;
    run;
quit;


/*Predicted values and prediction intervals*/    
proc glm data=work.auto_remobs plots=all;
Model price= width  enginesize horsepower/ cli solution;
output out = resultsC p=Predicted;
run;

proc means data=work.auto_remobs; run;



/***********************************************************/
/*Cross Validation
Cross-validation: method to try to determine if a model will have 
good predictive ability, even without a second set of data
Leave K out of validation (use for smaller data sets)
Options: 
1. Test set is preferred when a large number of observations, 
so that test set represents population well.
2. Leave one out is most computationally intensive.
3. Split and block requires that test sets are representative 
of population (no intrinsic order in data).
4. Random may lead to two different researchers producing two 
different models on the same data.
*/

/*Import dataset with formatted columns*/
data auto;
    infile '/home/carollr0/DataSets/Automobile_data.csv' dlm=',' firstobs=2;
    input symboling make $  fueltype $  aspiration $ numofdoors $   
    bodystyle $ drivewheels  $  enginelocation $ wheelbase length width 
        height curbweight enginetype $ /*numofcylinders $ */ enginesize fuelsystem $ bore 
        stroke compressionratio horsepower peakrpm citympg highwaympg price;
run;

/*Remove Normalized Losses feature - too many missing data points, not reliable*/
data auto2;
    set auto;
    keep symboling make fueltype aspiration  numofdoors    
    bodystyle  drivewheels    enginelocation  wheelbase length width 
        height curbweight enginetype  numofcylinders  enginesize fuelsystem  bore 
        stroke compressionratio horsepower peakrpm citympg highwaympg price; 
run;

/* Use the reserved word _NUMERIC_ to load all numeric variables  */
/* into the NUM array.  Use the reserved word _CHARACTER_ to      */ 
/* to load all character variables into the CHR array.            */

data nomiss;                    
set auto;   
array _ALL_ _character_;
array _ALL_ _numeric_  ;    

/* Check for missing values and delete when found. */ 

do i = 1 to dim(_ALL_);          
 if missing(_ALL_(i)) then delete;    
end;                            
drop i;  
run;
 
proc print data=nomiss;                     
run;                

/*Observations 47 is shown to be leverage and outliers. This observations will be removed.*/
data auto_remobs;
set work.nomiss;
if _N_=46  then delete;
run;
quit;

/*Leave one out CV 
Effects:    Intercept width enginesize stroke compressionratio horsepower peakrpm
Root MSE    3026.09372
Dependent Mean  13131
R-Square    0.8581
Adj R-Sq    0.8536
AIC 3312.70140
AICC    3313.47978
PRESS   1873371303
SBC 3139.57641
*/
proc glmselect data=work.nomiss;
model price = symboling wheelbase length width height curbweight enginesize bore 
        stroke compressionratio horsepower peakrpm citympg highwaympg / 
        selection=stepwise(stop=press);
run;


/*larger press--->increase bias, decease in variablility-fairly stable model
/*10 fold Cross Validation
Effects:    Intercept width enginesize stroke compressionratio horsepower peakrpm
Root MSE    3026.09372
Dependent Mean  13131
R-Square    0.8581
Adj R-Sq    0.8536
AIC 3312.70140
AICC    3313.47978
SBC 3139.57641
CV PRESS    2002069260
*/
proc glmselect data=work.nomiss;
model price = symboling wheelbase length width height curbweight enginesize bore 
        stroke compressionratio horsepower peakrpm citympg highwaympg / 
        selection=stepwise(choose=cv) ;
run;

/*5 fold Cross Validation 1/5 of obs will be taken out at a time to test
Effects:    Intercept width enginesize stroke compressionratio horsepower peakrpm
Root MSE    3026.09372
Dependent Mean  13131
R-Square    0.8581
Adj R-Sq    0.8536
AIC 3312.70140
AICC    3313.47978
SBC 3139.57641
CV PRESS    1871729861
*/
proc glmselect data=work.nomiss;
model price = symboling wheelbase length width height curbweight enginesize bore 
        stroke compressionratio horsepower peakrpm citympg highwaympg / 
        selection=forward(choose=cv) CVMETHOD=random(5);
run;

/*Using a stopping criterion, by default SAS does a 5fold cross validation (1/5 of the data at random=CVMETHOD=random(10)), effect that gives the best value of the criterion
Effects:    Intercept width enginesize stroke compressionratio horsepower peakrpm
Root MSE    3026.09372
Dependent Mean  13131
R-Square    0.8581
Adj R-Sq    0.8536
AIC 3312.70140
AICC    3313.47978
SBC 3139.57641
CV PRESS    1938077509
*/
proc glmselect data=work.nomiss;
model price = symboling wheelbase length width height curbweight enginesize bore 
        stroke compressionratio horsepower peakrpm citympg highwaympg / 
        selection=stepwise(stop=cv);
run;

/*all 3 cross validation methods end up with the same model each time*/

/*Check*/
proc glm data=work.nomiss plots=all;
Model price= width enginesize stroke compressionratio horsepower peakrpm/ cli solution;
output out = resultsC p=Predicted;
run;

